public class Prim
{
	private int [][] Pesos;
	private int n;
		public Prim(Digrah g) {	
			n = g.gteSuccesor();
			Pesos = g.getValue();
		}
    
    
	  public int PrimGrafo() {
			int longMin, menor;
			int z;
			int [] costo = new int [n];
			int [] masCerca = new int [n];
			boolean [] W = new boolean [n];
			
      for (int i = 0; i < n; i++){
				W[i] = false; 
				longMin = 0;
				W[0] = true;}
			for (int i = 1; i < n; i++) {
				costo[i] = Pesos[0][i];
				masCerca[i] = 0;
			}
			for (int i = 1; i < n; i++){
				menor = costo[1];
				z = 1;}
			for (int j = 2; j < n; j++)
				if (costo[j] < menor){
					menor = costo[j];
					z = j;
			}
			longMin += menor;
      System.out.println("V" + masCerca[z] + " -> " + "V" + z);
      W[z] = true;
      costo[z] = g.getValue().Integer_MAX_VALUE;

			for (int j = 1; j < n; j++)
      	if ((Pesos[z][j] < costo[j]) && !W[j]){
					costo[j] = Pesos[z][j];

			for (int j = 1; j < n; j++)
				if ((Pesos[z][j] < costo[j]) && !W[j]){
        	costo[j] = Pesos[z][j];
          masCerca[j] = z;
          }
      }
			return longMin;
}
}
